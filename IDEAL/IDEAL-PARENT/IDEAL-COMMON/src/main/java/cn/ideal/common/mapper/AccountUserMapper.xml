<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ideal.common.mapper.AccountUserMapper">
  <resultMap id="BaseResultMap" type="cn.ideal.common.pojo.AccountUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="pwd_question" jdbcType="VARCHAR" property="pwdQuestion" />
    <result column="pwd_answer" jdbcType="VARCHAR" property="pwdAnswer" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="zip" jdbcType="VARCHAR" property="zip" />
    <result column="vip" jdbcType="TINYINT" property="vip" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="point" jdbcType="BIGINT" property="point" />
    <result column="last_visit_time" jdbcType="TIMESTAMP" property="lastVisitTime" />
    <result column="last_visit_ip" jdbcType="VARCHAR" property="lastVisitIp" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, password, nickname, image, pwd_question, pwd_answer, real_name, id_card, 
    sex, telephone, email, country, address, zip, vip, status, point, last_visit_time, 
    last_visit_ip, created, updated
  </sql>
  <select id="selectByExample" parameterType="cn.ideal.common.pojo.AccountUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from account_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.ideal.common.pojo.AccountUserExample">
    delete from account_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.ideal.common.pojo.AccountUser">
    insert into account_user (id, username, password, 
      nickname, image, pwd_question, 
      pwd_answer, real_name, id_card, 
      sex, telephone, email, 
      country, address, zip, 
      vip, status, point, 
      last_visit_time, last_visit_ip, created, 
      updated)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR}, #{pwdQuestion,jdbcType=VARCHAR}, 
      #{pwdAnswer,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{country,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{zip,jdbcType=VARCHAR}, 
      #{vip,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, #{point,jdbcType=BIGINT}, 
      #{lastVisitTime,jdbcType=TIMESTAMP}, #{lastVisitIp,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, 
      #{updated,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.ideal.common.pojo.AccountUser">
    insert into account_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="pwdQuestion != null">
        pwd_question,
      </if>
      <if test="pwdAnswer != null">
        pwd_answer,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="zip != null">
        zip,
      </if>
      <if test="vip != null">
        vip,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="point != null">
        point,
      </if>
      <if test="lastVisitTime != null">
        last_visit_time,
      </if>
      <if test="lastVisitIp != null">
        last_visit_ip,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="pwdQuestion != null">
        #{pwdQuestion,jdbcType=VARCHAR},
      </if>
      <if test="pwdAnswer != null">
        #{pwdAnswer,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zip != null">
        #{zip,jdbcType=VARCHAR},
      </if>
      <if test="vip != null">
        #{vip,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="point != null">
        #{point,jdbcType=BIGINT},
      </if>
      <if test="lastVisitTime != null">
        #{lastVisitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastVisitIp != null">
        #{lastVisitIp,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.ideal.common.pojo.AccountUserExample" resultType="java.lang.Long">
    select count(*) from account_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.image != null">
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.pwdQuestion != null">
        pwd_question = #{record.pwdQuestion,jdbcType=VARCHAR},
      </if>
      <if test="record.pwdAnswer != null">
        pwd_answer = #{record.pwdAnswer,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null">
        id_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null">
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zip != null">
        zip = #{record.zip,jdbcType=VARCHAR},
      </if>
      <if test="record.vip != null">
        vip = #{record.vip,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.point != null">
        point = #{record.point,jdbcType=BIGINT},
      </if>
      <if test="record.lastVisitTime != null">
        last_visit_time = #{record.lastVisitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastVisitIp != null">
        last_visit_ip = #{record.lastVisitIp,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null">
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account_user
    set id = #{record.id,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      image = #{record.image,jdbcType=VARCHAR},
      pwd_question = #{record.pwdQuestion,jdbcType=VARCHAR},
      pwd_answer = #{record.pwdAnswer,jdbcType=VARCHAR},
      real_name = #{record.realName,jdbcType=VARCHAR},
      id_card = #{record.idCard,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      country = #{record.country,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      zip = #{record.zip,jdbcType=VARCHAR},
      vip = #{record.vip,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      point = #{record.point,jdbcType=BIGINT},
      last_visit_time = #{record.lastVisitTime,jdbcType=TIMESTAMP},
      last_visit_ip = #{record.lastVisitIp,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.ideal.common.pojo.AccountUser">
    update account_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="pwdQuestion != null">
        pwd_question = #{pwdQuestion,jdbcType=VARCHAR},
      </if>
      <if test="pwdAnswer != null">
        pwd_answer = #{pwdAnswer,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="zip != null">
        zip = #{zip,jdbcType=VARCHAR},
      </if>
      <if test="vip != null">
        vip = #{vip,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="point != null">
        point = #{point,jdbcType=BIGINT},
      </if>
      <if test="lastVisitTime != null">
        last_visit_time = #{lastVisitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastVisitIp != null">
        last_visit_ip = #{lastVisitIp,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.ideal.common.pojo.AccountUser">
    update account_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      pwd_question = #{pwdQuestion,jdbcType=VARCHAR},
      pwd_answer = #{pwdAnswer,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      zip = #{zip,jdbcType=VARCHAR},
      vip = #{vip,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      point = #{point,jdbcType=BIGINT},
      last_visit_time = #{lastVisitTime,jdbcType=TIMESTAMP},
      last_visit_ip = #{lastVisitIp,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>