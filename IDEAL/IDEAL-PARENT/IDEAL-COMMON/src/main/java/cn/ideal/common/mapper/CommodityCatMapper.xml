<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ideal.common.mapper.CommodityCatMapper">
  <resultMap id="BaseResultMap" type="cn.ideal.common.pojo.CommodityCat">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="pid" jdbcType="BIGINT" property="pid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="front_name" jdbcType="VARCHAR" property="frontName" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="isparent" jdbcType="TINYINT" property="isparent" />
    <result column="created" jdbcType="DATE" property="created" />
    <result column="updated" jdbcType="DATE" property="updated" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, pid, name, image, front_name, status, sort, isparent, created, updated
  </sql>
  <select id="selectByExample" parameterType="cn.ideal.common.pojo.CommodityCatExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from commodity_cat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from commodity_cat
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from commodity_cat
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.ideal.common.pojo.CommodityCatExample">
    delete from commodity_cat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.ideal.common.pojo.CommodityCat">
    insert into commodity_cat (id, pid, name, 
      image, front_name, status, 
      sort, isparent, created, 
      updated)
    values (#{id,jdbcType=BIGINT}, #{pid,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, 
      #{image,jdbcType=VARCHAR}, #{frontName,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{sort,jdbcType=INTEGER}, #{isparent,jdbcType=TINYINT}, #{created,jdbcType=DATE}, 
      #{updated,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="cn.ideal.common.pojo.CommodityCat">
    insert into commodity_cat
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="frontName != null">
        front_name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="isparent != null">
        isparent,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="frontName != null">
        #{frontName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="isparent != null">
        #{isparent,jdbcType=TINYINT},
      </if>
      <if test="created != null">
        #{created,jdbcType=DATE},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.ideal.common.pojo.CommodityCatExample" resultType="java.lang.Long">
    select count(*) from commodity_cat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update commodity_cat
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.image != null">
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.frontName != null">
        front_name = #{record.frontName,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.isparent != null">
        isparent = #{record.isparent,jdbcType=TINYINT},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=DATE},
      </if>
      <if test="record.updated != null">
        updated = #{record.updated,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update commodity_cat
    set id = #{record.id,jdbcType=BIGINT},
      pid = #{record.pid,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      image = #{record.image,jdbcType=VARCHAR},
      front_name = #{record.frontName,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      sort = #{record.sort,jdbcType=INTEGER},
      isparent = #{record.isparent,jdbcType=TINYINT},
      created = #{record.created,jdbcType=DATE},
      updated = #{record.updated,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.ideal.common.pojo.CommodityCat">
    update commodity_cat
    <set>
      <if test="pid != null">
        pid = #{pid,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="frontName != null">
        front_name = #{frontName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="isparent != null">
        isparent = #{isparent,jdbcType=TINYINT},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=DATE},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.ideal.common.pojo.CommodityCat">
    update commodity_cat
    set pid = #{pid,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      front_name = #{frontName,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      sort = #{sort,jdbcType=INTEGER},
      isparent = #{isparent,jdbcType=TINYINT},
      created = #{created,jdbcType=DATE},
      updated = #{updated,jdbcType=DATE}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>