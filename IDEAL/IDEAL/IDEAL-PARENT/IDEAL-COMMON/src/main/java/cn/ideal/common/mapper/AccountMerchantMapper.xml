<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ideal.common.mapper.AccountMerchantMapper" >
  <resultMap id="BaseResultMap" type="cn.ideal.common.pojo.AccountMerchant" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="company_zh" property="companyZh" jdbcType="VARCHAR" />
    <result column="company_en" property="companyEn" jdbcType="VARCHAR" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="zip" property="zip" jdbcType="VARCHAR" />
    <result column="job" property="job" jdbcType="VARCHAR" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="fax" property="fax" jdbcType="VARCHAR" />
    <result column="ci" property="ci" jdbcType="VARCHAR" />
    <result column="ein" property="ein" jdbcType="VARCHAR" />
    <result column="legal_representative" property="legalRepresentative" jdbcType="VARCHAR" />
    <result column="legal_code" property="legalCode" jdbcType="VARCHAR" />
    <result column="main_proprietor" property="mainProprietor" jdbcType="VARCHAR" />
    <result column="leader_code" property="leaderCode" jdbcType="VARCHAR" />
    <result column="registed_fund" property="registedFund" jdbcType="BIGINT" />
    <result column="bank" property="bank" jdbcType="VARCHAR" />
    <result column="bank_account" property="bankAccount" jdbcType="VARCHAR" />
    <result column="bank_permit" property="bankPermit" jdbcType="VARCHAR" />
    <result column="employee" property="employee" jdbcType="BIGINT" />
    <result column="power" property="power" jdbcType="VARCHAR" />
    <result column="employee_analysis" property="employeeAnalysis" jdbcType="VARCHAR" />
    <result column="business_field" property="businessField" jdbcType="VARCHAR" />
    <result column="is_fixed_source" property="isFixedSource" jdbcType="TINYINT" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, username, password, phone, email, company_zh, company_en, location, address, 
    zip, job, telephone, fax, ci, ein, legal_representative, legal_code, main_proprietor, 
    leader_code, registed_fund, bank, bank_account, bank_permit, employee, power, employee_analysis, 
    business_field, is_fixed_source, created, updated
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.ideal.common.pojo.AccountMerchantExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account_merchant
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from account_merchant
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from account_merchant
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.ideal.common.pojo.AccountMerchantExample" >
    delete from account_merchant
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.ideal.common.pojo.AccountMerchant" >
    insert into account_merchant (id, username, password, 
      phone, email, company_zh, 
      company_en, location, address, 
      zip, job, telephone, 
      fax, ci, ein, legal_representative, 
      legal_code, main_proprietor, leader_code, 
      registed_fund, bank, bank_account, 
      bank_permit, employee, power, 
      employee_analysis, business_field, is_fixed_source, 
      created, updated)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{companyZh,jdbcType=VARCHAR}, 
      #{companyEn,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zip,jdbcType=VARCHAR}, #{job,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, 
      #{fax,jdbcType=VARCHAR}, #{ci,jdbcType=VARCHAR}, #{ein,jdbcType=VARCHAR}, #{legalRepresentative,jdbcType=VARCHAR}, 
      #{legalCode,jdbcType=VARCHAR}, #{mainProprietor,jdbcType=VARCHAR}, #{leaderCode,jdbcType=VARCHAR}, 
      #{registedFund,jdbcType=BIGINT}, #{bank,jdbcType=VARCHAR}, #{bankAccount,jdbcType=VARCHAR}, 
      #{bankPermit,jdbcType=VARCHAR}, #{employee,jdbcType=BIGINT}, #{power,jdbcType=VARCHAR}, 
      #{employeeAnalysis,jdbcType=VARCHAR}, #{businessField,jdbcType=VARCHAR}, #{isFixedSource,jdbcType=TINYINT}, 
      #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.ideal.common.pojo.AccountMerchant" >
    insert into account_merchant
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="companyZh != null" >
        company_zh,
      </if>
      <if test="companyEn != null" >
        company_en,
      </if>
      <if test="location != null" >
        location,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="zip != null" >
        zip,
      </if>
      <if test="job != null" >
        job,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="fax != null" >
        fax,
      </if>
      <if test="ci != null" >
        ci,
      </if>
      <if test="ein != null" >
        ein,
      </if>
      <if test="legalRepresentative != null" >
        legal_representative,
      </if>
      <if test="legalCode != null" >
        legal_code,
      </if>
      <if test="mainProprietor != null" >
        main_proprietor,
      </if>
      <if test="leaderCode != null" >
        leader_code,
      </if>
      <if test="registedFund != null" >
        registed_fund,
      </if>
      <if test="bank != null" >
        bank,
      </if>
      <if test="bankAccount != null" >
        bank_account,
      </if>
      <if test="bankPermit != null" >
        bank_permit,
      </if>
      <if test="employee != null" >
        employee,
      </if>
      <if test="power != null" >
        power,
      </if>
      <if test="employeeAnalysis != null" >
        employee_analysis,
      </if>
      <if test="businessField != null" >
        business_field,
      </if>
      <if test="isFixedSource != null" >
        is_fixed_source,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="updated != null" >
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="companyZh != null" >
        #{companyZh,jdbcType=VARCHAR},
      </if>
      <if test="companyEn != null" >
        #{companyEn,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zip != null" >
        #{zip,jdbcType=VARCHAR},
      </if>
      <if test="job != null" >
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="fax != null" >
        #{fax,jdbcType=VARCHAR},
      </if>
      <if test="ci != null" >
        #{ci,jdbcType=VARCHAR},
      </if>
      <if test="ein != null" >
        #{ein,jdbcType=VARCHAR},
      </if>
      <if test="legalRepresentative != null" >
        #{legalRepresentative,jdbcType=VARCHAR},
      </if>
      <if test="legalCode != null" >
        #{legalCode,jdbcType=VARCHAR},
      </if>
      <if test="mainProprietor != null" >
        #{mainProprietor,jdbcType=VARCHAR},
      </if>
      <if test="leaderCode != null" >
        #{leaderCode,jdbcType=VARCHAR},
      </if>
      <if test="registedFund != null" >
        #{registedFund,jdbcType=BIGINT},
      </if>
      <if test="bank != null" >
        #{bank,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null" >
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bankPermit != null" >
        #{bankPermit,jdbcType=VARCHAR},
      </if>
      <if test="employee != null" >
        #{employee,jdbcType=BIGINT},
      </if>
      <if test="power != null" >
        #{power,jdbcType=VARCHAR},
      </if>
      <if test="employeeAnalysis != null" >
        #{employeeAnalysis,jdbcType=VARCHAR},
      </if>
      <if test="businessField != null" >
        #{businessField,jdbcType=VARCHAR},
      </if>
      <if test="isFixedSource != null" >
        #{isFixedSource,jdbcType=TINYINT},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.ideal.common.pojo.AccountMerchantExample" resultType="java.lang.Integer" >
    select count(*) from account_merchant
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update account_merchant
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.companyZh != null" >
        company_zh = #{record.companyZh,jdbcType=VARCHAR},
      </if>
      <if test="record.companyEn != null" >
        company_en = #{record.companyEn,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null" >
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zip != null" >
        zip = #{record.zip,jdbcType=VARCHAR},
      </if>
      <if test="record.job != null" >
        job = #{record.job,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null" >
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.fax != null" >
        fax = #{record.fax,jdbcType=VARCHAR},
      </if>
      <if test="record.ci != null" >
        ci = #{record.ci,jdbcType=VARCHAR},
      </if>
      <if test="record.ein != null" >
        ein = #{record.ein,jdbcType=VARCHAR},
      </if>
      <if test="record.legalRepresentative != null" >
        legal_representative = #{record.legalRepresentative,jdbcType=VARCHAR},
      </if>
      <if test="record.legalCode != null" >
        legal_code = #{record.legalCode,jdbcType=VARCHAR},
      </if>
      <if test="record.mainProprietor != null" >
        main_proprietor = #{record.mainProprietor,jdbcType=VARCHAR},
      </if>
      <if test="record.leaderCode != null" >
        leader_code = #{record.leaderCode,jdbcType=VARCHAR},
      </if>
      <if test="record.registedFund != null" >
        registed_fund = #{record.registedFund,jdbcType=BIGINT},
      </if>
      <if test="record.bank != null" >
        bank = #{record.bank,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAccount != null" >
        bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.bankPermit != null" >
        bank_permit = #{record.bankPermit,jdbcType=VARCHAR},
      </if>
      <if test="record.employee != null" >
        employee = #{record.employee,jdbcType=BIGINT},
      </if>
      <if test="record.power != null" >
        power = #{record.power,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeAnalysis != null" >
        employee_analysis = #{record.employeeAnalysis,jdbcType=VARCHAR},
      </if>
      <if test="record.businessField != null" >
        business_field = #{record.businessField,jdbcType=VARCHAR},
      </if>
      <if test="record.isFixedSource != null" >
        is_fixed_source = #{record.isFixedSource,jdbcType=TINYINT},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null" >
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update account_merchant
    set id = #{record.id,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      company_zh = #{record.companyZh,jdbcType=VARCHAR},
      company_en = #{record.companyEn,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      zip = #{record.zip,jdbcType=VARCHAR},
      job = #{record.job,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      fax = #{record.fax,jdbcType=VARCHAR},
      ci = #{record.ci,jdbcType=VARCHAR},
      ein = #{record.ein,jdbcType=VARCHAR},
      legal_representative = #{record.legalRepresentative,jdbcType=VARCHAR},
      legal_code = #{record.legalCode,jdbcType=VARCHAR},
      main_proprietor = #{record.mainProprietor,jdbcType=VARCHAR},
      leader_code = #{record.leaderCode,jdbcType=VARCHAR},
      registed_fund = #{record.registedFund,jdbcType=BIGINT},
      bank = #{record.bank,jdbcType=VARCHAR},
      bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      bank_permit = #{record.bankPermit,jdbcType=VARCHAR},
      employee = #{record.employee,jdbcType=BIGINT},
      power = #{record.power,jdbcType=VARCHAR},
      employee_analysis = #{record.employeeAnalysis,jdbcType=VARCHAR},
      business_field = #{record.businessField,jdbcType=VARCHAR},
      is_fixed_source = #{record.isFixedSource,jdbcType=TINYINT},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.ideal.common.pojo.AccountMerchant" >
    update account_merchant
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="companyZh != null" >
        company_zh = #{companyZh,jdbcType=VARCHAR},
      </if>
      <if test="companyEn != null" >
        company_en = #{companyEn,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="zip != null" >
        zip = #{zip,jdbcType=VARCHAR},
      </if>
      <if test="job != null" >
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="fax != null" >
        fax = #{fax,jdbcType=VARCHAR},
      </if>
      <if test="ci != null" >
        ci = #{ci,jdbcType=VARCHAR},
      </if>
      <if test="ein != null" >
        ein = #{ein,jdbcType=VARCHAR},
      </if>
      <if test="legalRepresentative != null" >
        legal_representative = #{legalRepresentative,jdbcType=VARCHAR},
      </if>
      <if test="legalCode != null" >
        legal_code = #{legalCode,jdbcType=VARCHAR},
      </if>
      <if test="mainProprietor != null" >
        main_proprietor = #{mainProprietor,jdbcType=VARCHAR},
      </if>
      <if test="leaderCode != null" >
        leader_code = #{leaderCode,jdbcType=VARCHAR},
      </if>
      <if test="registedFund != null" >
        registed_fund = #{registedFund,jdbcType=BIGINT},
      </if>
      <if test="bank != null" >
        bank = #{bank,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null" >
        bank_account = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bankPermit != null" >
        bank_permit = #{bankPermit,jdbcType=VARCHAR},
      </if>
      <if test="employee != null" >
        employee = #{employee,jdbcType=BIGINT},
      </if>
      <if test="power != null" >
        power = #{power,jdbcType=VARCHAR},
      </if>
      <if test="employeeAnalysis != null" >
        employee_analysis = #{employeeAnalysis,jdbcType=VARCHAR},
      </if>
      <if test="businessField != null" >
        business_field = #{businessField,jdbcType=VARCHAR},
      </if>
      <if test="isFixedSource != null" >
        is_fixed_source = #{isFixedSource,jdbcType=TINYINT},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.ideal.common.pojo.AccountMerchant" >
    update account_merchant
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      company_zh = #{companyZh,jdbcType=VARCHAR},
      company_en = #{companyEn,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      zip = #{zip,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      fax = #{fax,jdbcType=VARCHAR},
      ci = #{ci,jdbcType=VARCHAR},
      ein = #{ein,jdbcType=VARCHAR},
      legal_representative = #{legalRepresentative,jdbcType=VARCHAR},
      legal_code = #{legalCode,jdbcType=VARCHAR},
      main_proprietor = #{mainProprietor,jdbcType=VARCHAR},
      leader_code = #{leaderCode,jdbcType=VARCHAR},
      registed_fund = #{registedFund,jdbcType=BIGINT},
      bank = #{bank,jdbcType=VARCHAR},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      bank_permit = #{bankPermit,jdbcType=VARCHAR},
      employee = #{employee,jdbcType=BIGINT},
      power = #{power,jdbcType=VARCHAR},
      employee_analysis = #{employeeAnalysis,jdbcType=VARCHAR},
      business_field = #{businessField,jdbcType=VARCHAR},
      is_fixed_source = #{isFixedSource,jdbcType=TINYINT},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>