<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ideal.common.mapper.CommoditySkuMapper">
  <resultMap id="BaseResultMap" type="cn.ideal.common.pojo.CommoditySku">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="spuid" jdbcType="BIGINT" property="spuid" />
    <result column="csid" jdbcType="BIGINT" property="csid" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="discount" jdbcType="INTEGER" property="discount" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="descp" jdbcType="VARCHAR" property="descp" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, spuid, csid, price, discount, quantity, image, position, status, descp
  </sql>
  <select id="selectByExample" parameterType="cn.ideal.common.pojo.CommoditySkuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from commodity_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from commodity_sku
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from commodity_sku
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.ideal.common.pojo.CommoditySkuExample">
    delete from commodity_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.ideal.common.pojo.CommoditySku">
    insert into commodity_sku (id, spuid, csid, 
      price, discount, quantity, 
      image, position, status, 
      descp)
    values (#{id,jdbcType=BIGINT}, #{spuid,jdbcType=BIGINT}, #{csid,jdbcType=BIGINT}, 
      #{price,jdbcType=INTEGER}, #{discount,jdbcType=INTEGER}, #{quantity,jdbcType=INTEGER}, 
      #{image,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{descp,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.ideal.common.pojo.CommoditySku">
    insert into commodity_sku
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="spuid != null">
        spuid,
      </if>
      <if test="csid != null">
        csid,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="discount != null">
        discount,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="descp != null">
        descp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="spuid != null">
        #{spuid,jdbcType=BIGINT},
      </if>
      <if test="csid != null">
        #{csid,jdbcType=BIGINT},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="descp != null">
        #{descp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.ideal.common.pojo.CommoditySkuExample" resultType="java.lang.Long">
    select count(*) from commodity_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update commodity_sku
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.spuid != null">
        spuid = #{record.spuid,jdbcType=BIGINT},
      </if>
      <if test="record.csid != null">
        csid = #{record.csid,jdbcType=BIGINT},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.discount != null">
        discount = #{record.discount,jdbcType=INTEGER},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.image != null">
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null">
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.descp != null">
        descp = #{record.descp,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update commodity_sku
    set id = #{record.id,jdbcType=BIGINT},
      spuid = #{record.spuid,jdbcType=BIGINT},
      csid = #{record.csid,jdbcType=BIGINT},
      price = #{record.price,jdbcType=INTEGER},
      discount = #{record.discount,jdbcType=INTEGER},
      quantity = #{record.quantity,jdbcType=INTEGER},
      image = #{record.image,jdbcType=VARCHAR},
      position = #{record.position,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      descp = #{record.descp,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.ideal.common.pojo.CommoditySku">
    update commodity_sku
    <set>
      <if test="spuid != null">
        spuid = #{spuid,jdbcType=BIGINT},
      </if>
      <if test="csid != null">
        csid = #{csid,jdbcType=BIGINT},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="discount != null">
        discount = #{discount,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="descp != null">
        descp = #{descp,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.ideal.common.pojo.CommoditySku">
    update commodity_sku
    set spuid = #{spuid,jdbcType=BIGINT},
      csid = #{csid,jdbcType=BIGINT},
      price = #{price,jdbcType=INTEGER},
      discount = #{discount,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER},
      image = #{image,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      descp = #{descp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>