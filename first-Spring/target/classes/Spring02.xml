<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util"  
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<bean id="b1" class="Spring02.B"/>
 	<bean id="c1" class="Spring02.C"/>
	<!-- 
	   property:让容器调用set方法来建立依赖关系。其中
	   name：属性指定属性名（就是A类内部的属性；即就是其他的类，这样的话就把两个类联系起来了，也就建立了依赖关系）
	   ref：指定被注入符bean的id
	   运行规则：程序会把name属性中的name当做Javabean属性对待，即就是如果name="b",程序就会调A的setB方法，然后把ref的值当做参数传进去
	 -->
	<bean id="a1" class="Spring02.A">
	   <property name="b" ref="c1"/>
	</bean>
	
	
	<!-- 构造器方式注入 -->
	<bean id="com" class="Spring02.computer"/>
	<bean id="man" class="Spring02.manager">
	   <constructor-arg index="0" ref="com"/>
	</bean>
	
	
	
	
</beans>